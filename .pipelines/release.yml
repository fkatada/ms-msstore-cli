resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

trigger:
  branches:
    include:
      - rel/v*
pr: none

parameters:
  - name: dotnet_configurations
    type: object
    default:
      - Release
  - name: buildPlatforms
    type: object
    default:
      - x64
      - arm64
  - name: DoEsrp
    type: boolean
    default: true
  - name: signingIdentity
    type: object
    default:
      serviceName: $(SigningServiceName)
      appId: $(SigningAppId)
      tenantId: $(SigningTenantId)
      akvName: $(SigningAKVName)
      authCertName: $(SigningAuthCertName)
      signCertName: $(SigningSignCertName)
  - name: pools
    type: object
    default:
    - name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
      dotnet_runtime: win
      dotnet_framework: net9.0-windows10.0.17763.0
    - name: Azure-Pipelines-1ESPT-ExDShared
      image: ubuntu-latest
      os: linux
      dotnet_runtime: linux
      dotnet_framework: net9.0
    - name: Azure Pipelines
      image: macos-latest
      os: macOS
      dotnet_runtime: osx
      dotnet_framework: net9.0

name: 0.0.$(Date:yyMM).$(Date:dd)$(Rev:rr)

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    customBuildTags:
    - ES365AIMigrationTooling
    sdl:
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared
        image: windows-2022
        os: windows
      componentgovernance:
        ignoreDirectories: $(Build.SourcesDirectory)/MSStore.CLI.UnitTests/TestData,$(Build.SourcesDirectory)/MSStore.CLI.UnitTests/bin
      credscan:
        suppressionsFile: '$(System.DefaultWorkingDirectory)/.pipelines/CredScanSuppressions.json'
      binSkim:
        AnalyzeTargetGlob: '$(System.DefaultWorkingDirectory)\MSStore.API\bin\**\net9.0\MSStore.API.dll'
    stages:
      - stage: NuGet
        jobs:
        - ${{ each pool in parameters.pools }}:
          - ${{ each dotnet_config in parameters.dotnet_configurations }}:
            - job: Build_Nuget_And_Tests_${{ pool.os }}_${{ dotnet_config }}
              displayName: Build Nuget and Run Tests (${{ pool.os }}_${{ dotnet_config }})
              pool:
                name: ${{ pool.name }}
                image: ${{ pool.image }}
                os: ${{ pool.os }}
              steps:
              - checkout: self
              - task: UseDotNet@2
                displayName: Setup .NET 9
                inputs:
                  version: 9.0.x
              - ${{ if eq(parameters.DoEsrp, 'true') }}:
                - task: UseDotNet@2
                  displayName: Setup .NET 6.0 (For ESRP Task)
                  condition: startsWith(variables['Agent.OS'], 'Linux')
                  inputs:
                    packageType: runtime
                    version: 6.0.x
              - script: mv -f $(Build.SourcesDirectory)/.pipelines/release-nuget.config ./nuget.config
                displayName: Add release package source
              - task: NuGetAuthenticate@1
              - script: dotnet restore MSStore.CLI.sln /p:Configuration=${{ dotnet_config }}
                displayName: Restore dependencies
              - template: ./.pipelines/templates/build-nuget.yaml@self
                parameters:
                  dotnet_configuration: ${{ dotnet_config }}
                  AgentOS: $(Agent.OS)
                  DoEsrp: ${{ parameters.DoEsrp }}
                  signingIdentity: ${{ parameters.signingIdentity }}
              - template: ./.pipelines/templates/pack-nuget.yaml@self
                parameters:
                  dotnet_configuration: ${{ dotnet_config }}
                  AgentOS: $(Agent.OS)
                  DoEsrp: ${{ parameters.DoEsrp }}
                  signingIdentity: ${{ parameters.signingIdentity }}

      - stage: CLI
        dependsOn: NuGet
        jobs:
        - ${{ each pool in parameters.pools }}:
          - ${{ each dotnet_config in parameters.dotnet_configurations }}:
            - ${{ each platform in parameters.buildPlatforms }}:
              - job: Build_CLI_${{ pool.os }}_${{ platform }}_${{ dotnet_config }}
                displayName: Build CLI (${{ pool.os }}_${{ platform }})_${{ dotnet_config }}
                pool:
                  name: ${{ pool.name }}
                  image: ${{ pool.image }}
                  os: ${{ pool.os }}
                steps:
                - checkout: self
                  persistCredentials: true
                - task: UseDotNet@2
                  displayName: Setup .NET 9
                  inputs:
                    version: 9.0.x
                - ${{ if eq(parameters.DoEsrp, 'true') }}:
                  - task: UseDotNet@2
                    displayName: Setup .NET 6.0 (For ESRP Task)
                    condition: startsWith(variables['Agent.OS'], 'Windows_NT')
                    inputs:
                      packageType: runtime
                      version: 6.0.x
                - script: mv -f ./.pipelines/release-nuget.config ./nuget.config
                  displayName: Add release package source
                - task: FileTransform@2
                  displayName: Replace AIConnectionString
                  env:
                    AIConnectionString: $(AIConnectionString)
                  inputs:
                    folderPath: ./
                    jsonTargetFiles: MSStore.CLI/config.json
                    xmlTargetFiles: ''
                    xmlTransformationRules: ''
                - task: NuGetAuthenticate@1
                - script: dotnet restore MSStore.CLI -r ${{ pool.dotnet_runtime }}-${{ platform }} /p:Configuration=${{ dotnet_config }} /p:PublishReadyToRun=true
                  displayName: Restore CLI
                - template: ./.pipelines/templates/build-cli.yaml@self
                  parameters:
                    dotnet_runtime: ${{ pool.dotnet_runtime }}
                    dotnet_framework: ${{ pool.dotnet_framework }}
                    dotnet_arch: ${{ platform }}
                    dotnet_configuration: ${{ dotnet_config }}
                    AgentOS: $(Agent.OS)
                    DoEsrp: ${{ parameters.DoEsrp }}
                    signingIdentity: ${{ parameters.signingIdentity }}