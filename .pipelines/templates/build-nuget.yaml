parameters:
  - name: dotnet_configuration
    type: object
    default:
      - Release
  - name: AgentOS
    type: string
    default: ''
  - name: DoEsrp
    type: boolean
    default: false
  - name: signingIdentity
    type: object
    default: {}

steps:
- bash: |
    echo "##vso[task.setvariable variable=AgentOS;]${{ parameters.AgentOS }}"
- script: |
    sudo apt-get install -y gnome-keyring dbus-x11
    eval "$(dbus-launch --sh-syntax)"
    echo "##vso[task.setvariable variable=DBUS_SESSION_BUS_ADDRESS;]$DBUS_SESSION_BUS_ADDRESS"
    export $(echo 'anypass_just_to_unlock' | gnome-keyring-daemon --unlock)
    export $(echo 'anypass_just_to_unlock' | gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh)
  condition: startsWith(variables.AgentOS, 'Linux')
  displayName: Install and Configure Keyring
  env:
    DISPLAY: :0.0
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool
- script: ./nbgv cloud
  condition: startsWith(variables.AgentOS, 'Darwin')
  displayName: Set Version MacOS
- script: nbgv cloud
  condition: not(startsWith(variables.AgentOS, 'Darwin'))
  displayName: Set Version
- script: dotnet build MSStore.CLI.sln --no-restore /p:Configuration=${{ parameters.dotnet_configuration }}
  displayName: Build
- task: DotNetCoreCLI@2
  displayName: 'Tests net9.0'
  env:
    DISPLAY: :0.0
  inputs:
    command: 'run'
    projects: '**/*[Tt]est*/*.csproj'
    arguments: '-f net9.0 --no-build -c ${{ parameters.dotnet_configuration }} --coverage --coverage-output-format cobertura --report-trx'
- task: DotNetCoreCLI@2
  displayName: 'Tests net9.0-windows10.0.17763.0'
  condition: startsWith(variables.AgentOS, 'Windows_NT')
  env:
    DISPLAY: :0.0
  inputs:
    command: 'run'
    projects: '**/*[Tt]est*/*.csproj'
    arguments: '-f net9.0-windows10.0.17763.0 --no-build -c ${{ parameters.dotnet_configuration }} --coverage --coverage-output-format cobertura --report-trx'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(Build.SourcesDirectory)/MSStore.CLI.UnitTests/**/TestResults/*.trx'
- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool --version 5.3.11'
- script: reportgenerator "-reports:$(Build.SourcesDirectory)/**/*.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)/report" "-reporttypes:Cobertura" "-filefilters:-*GenerationContext*.g.cs"
  displayName: Merge code coverage files
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/report/Cobertura.xml'
- ${{ if eq(parameters['DoEsrp'], 'true') }}:
  - task: EsrpCodeSigning@5
    displayName: Code Sign ESRP - API DLL
    condition: startsWith(variables.AgentOS, 'Linux')
    inputs:
      ConnectedServiceName: ${{ parameters.signingIdentity.serviceName }}
      AppRegistrationClientId: ${{ parameters.signingIdentity.appId }}
      AppRegistrationTenantId: ${{ parameters.signingIdentity.tenantId }}
      AuthAKVName: ${{ parameters.signingIdentity.akvName }}
      AuthCertName: ${{ parameters.signingIdentity.authCertName }}
      AuthSignCertName: ${{ parameters.signingIdentity.signCertName }}
      FolderPath: '$(System.DefaultWorkingDirectory)/MSStore.API/bin/${{ parameters.dotnet_configuration }}/net9.0'
      Pattern: 'MSStore.API.dll'
      signConfigType: inlineSignParams
      inlineOperation: |
       [ 
           {
               "KeyCode": "CP-233863-SN",
               "OperationCode": "StrongNameSign",
               "Parameters": { },
               "ToolName": "sign",
               "ToolVersion": "1.0"
           },
           {
               "KeyCode": "CP-233863-SN",
               "OperationCode": "StrongNameVerify",
               "Parameters": { },
               "ToolName": "sign",
               "ToolVersion": "1.0"
           },
           {
               "KeyCode": "CP-230012",
               "OperationCode": "SigntoolSign",
               "Parameters": {
                   "OpusName": "Microsoft Store CLI",
                   "OpusInfo": "https://github.com/Microsoft/msstore-cli",
                   "FileDigest": "/fd \"SHA256\"",
                   "PageHash": "/PH",
                   "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
               },
               "ToolName": "sign",
               "ToolVersion": "1.0"
            },
            {
               "KeyCode": "CP-230012",
               "OperationCode": "SigntoolVerify",
               "Parameters": {},
               "ToolName": "sign",
               "ToolVersion": "1.0"
            }
       ]
- task: ComponentGovernanceComponentDetection@0
  displayName: 'Component Governance Detection'
  inputs:
    ignoreDirectories: $(Build.SourcesDirectory)/MSStore.CLI.UnitTests/TestData,$(Build.SourcesDirectory)/MSStore.CLI.UnitTests/bin